Index: java/org/codebrewer/idea/jetty/JettyDeploymentProvider.java
===================================================================
--- java/org/codebrewer/idea/jetty/JettyDeploymentProvider.java	Fri Dec 18 16:23:43 CET 2009
+++ java/org/codebrewer/idea/jetty/JettyDeploymentProvider.java	Fri Dec 18 16:23:43 CET 2009
@@ -29,6 +29,8 @@
 import com.intellij.openapi.ui.Messages;
 import com.intellij.openapi.util.JDOMUtil;
 import com.intellij.openapi.util.io.FileUtil;
+import com.intellij.packaging.artifacts.ArtifactPointer;
+
 import static org.codebrewer.idea.jetty.JettyConstants.JETTY_CONTEXT_DEPLOYER_CONFIG_FILE_NAME;
 import org.jdom.Document;
 import org.jdom.output.XMLOutputter;
@@ -44,7 +46,7 @@
  * @author Mark Scott
  * @version $Id: JettyDeploymentProvider.java 37 2007-08-19 12:55:56Z mark $
  */
-public class JettyDeploymentProvider implements DeploymentProvider
+public class JettyDeploymentProvider extends DeploymentProvider
 {
   private static void setDeploymentStatus(J2EEServerInstance instance,
                                           JettyModuleDeploymentModel model,
@@ -52,7 +54,7 @@
   {
     final CommonModel configuration = instance.getCommonModel();
     final JettyModel jettyConfiguration = ((JettyModel) configuration.getServerModel());
-    final JavaeeFacet facet = model.getFacet();
+    final ArtifactPointer facet = model.getArtifactPointer();
     final DeploymentManager deploymentManager = DeploymentManager.getInstance(jettyConfiguration.getProject());
 
     deploymentManager.setDeploymentStatus(facet, status, configuration, instance);
@@ -101,14 +103,14 @@
     DeploymentStatus deploymentStatus = DeploymentStatus.NOT_DEPLOYED;
 
     final JettyModuleDeploymentModel moduleDeploymentModel = (JettyModuleDeploymentModel) model;
-    final JavaeeFacet facet = model.getFacet();
+    final ArtifactPointer facet = model.getArtifactPointer();
 
     if (facet != null) {
       try {
         final Document moduleDeploymentDocument = JettyUtil.getContextDeploymentDocument(project, moduleDeploymentModel);
         final JettyModel jettyModel = (JettyModel) moduleDeploymentModel.getServerModel();
         final File destinationDirectory = JettyUtil.getContextDeployerConfigurationDirectory(jettyModel.getScratchDirectory());
-        final File facetConfigurationFile = new File(destinationDirectory, facet.getName() + ".xml");
+        final File facetConfigurationFile = new File(destinationDirectory, facet.getArtifactName() + ".xml");
         final XMLOutputter xmlOutputter = JDOMUtil.createOutputter(System.getProperty("line.separator"));
 
         OutputStream out = null;
@@ -121,7 +123,7 @@
         catch (IOException e) {
           deploymentStatus = DeploymentStatus.FAILED;
           Messages.showErrorDialog(
-            project, e.getMessage(), JettyBundle.message("message.text.error.deploying.facet", facet.getName()));
+            project, e.getMessage(), JettyBundle.message("message.text.error.deploying.facet", facet.getArtifactName()));
         }
         finally {
           if (out != null) {
@@ -140,7 +142,7 @@
         deploymentStatus = DeploymentStatus.FAILED;
         JOptionPane.showMessageDialog(null,
           e.getMessage(),
-          JettyBundle.message("message.text.error.deploying.facet", facet.getName()),
+          JettyBundle.message("message.text.error.deploying.facet", facet.getArtifactName()),
           JOptionPane.ERROR_MESSAGE);
       }
     }
@@ -149,7 +151,7 @@
   }
 
   public DeploymentModel createNewDeploymentModel(CommonModel configuration,
-                                                  FacetPointer<JavaeeFacet> javaeeFacetPointer)
+                                                  ArtifactPointer javaeeFacetPointer)
   {
     return new JettyModuleDeploymentModel(configuration, javaeeFacetPointer);
   }
@@ -165,12 +167,12 @@
     DeploymentStatus deploymentStatus = DeploymentStatus.NOT_DEPLOYED;
 
     final JettyModuleDeploymentModel moduleDeploymentModel = (JettyModuleDeploymentModel) model;
-    final JavaeeFacet facet = model.getFacet();
+    final ArtifactPointer facet = model.getArtifactPointer();
 
     if (facet != null) {
       final JettyModel jettyModel = (JettyModel) moduleDeploymentModel.getServerModel();
       final File configurationDirectory = JettyUtil.getContextDeployerConfigurationDirectory(jettyModel.getScratchDirectory());
-      final File facetConfigurationFile = new File(configurationDirectory, facet.getName() + ".xml");
+      final File facetConfigurationFile = new File(configurationDirectory, facet.getArtifactName() + ".xml");
 
       deploymentStatus = facetConfigurationFile.delete() ? DeploymentStatus.NOT_DEPLOYED : DeploymentStatus.UNKNOWN;
     }
@@ -183,12 +185,12 @@
     DeploymentStatus deploymentStatus = DeploymentStatus.UNKNOWN;
 
     final JettyModuleDeploymentModel moduleDeploymentModel = (JettyModuleDeploymentModel) model;
-    final JavaeeFacet facet = model.getFacet();
+    final ArtifactPointer facet = model.getArtifactPointer();
 
     if (facet != null) {
       final JettyModel jettyModel = (JettyModel) moduleDeploymentModel.getServerModel();
       final File configurationDirectory = JettyUtil.getContextDeployerConfigurationDirectory(jettyModel.getScratchDirectory());
-      final File facetConfigurationFile = new File(configurationDirectory, facet.getName() + ".xml");
+      final File facetConfigurationFile = new File(configurationDirectory, facet.getArtifactName() + ".xml");
 
       deploymentStatus = facetConfigurationFile.exists() ? DeploymentStatus.DEPLOYED : DeploymentStatus.NOT_DEPLOYED;
     }
Index: java/org/codebrewer/idea/jetty/JettyModuleDeploymentModel.java
===================================================================
--- java/org/codebrewer/idea/jetty/JettyModuleDeploymentModel.java	Fri Dec 18 16:16:22 CET 2009
+++ java/org/codebrewer/idea/jetty/JettyModuleDeploymentModel.java	Fri Dec 18 16:16:22 CET 2009
@@ -21,6 +21,8 @@
 import com.intellij.javaee.run.configuration.CommonModel;
 import com.intellij.openapi.util.InvalidDataException;
 import com.intellij.openapi.util.WriteExternalException;
+import com.intellij.packaging.artifacts.ArtifactPointer;
+
 import org.jdom.Element;
 import org.jetbrains.annotations.NotNull;
 
@@ -35,7 +37,7 @@
 
   private String contextPath = DEFAULT_CONTEXT_PATH;
 
-  public JettyModuleDeploymentModel(CommonModel project, FacetPointer<JavaeeFacet> facetPointer)
+  public JettyModuleDeploymentModel(CommonModel project, ArtifactPointer facetPointer)
   {
     super(project, facetPointer);
   }
